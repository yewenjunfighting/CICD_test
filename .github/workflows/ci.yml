name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  prepare:
    name: 🏗️ 环境准备
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ 拉取代码
        uses: actions/checkout@v4

      - name: ⚡ 设置 Node.js（20.18.3）
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.3

      - name: 📦 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.2 # 指定 pnpm 版本，可以换成 latest

      - name: 📦 复用 pnpm 依赖缓存
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📦 安装依赖
        run: pnpm install

      - name: 📦 缓存 node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

  lint:
    name: 🎨 代码规范检测
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: 🛎️ 拉取代码
        uses: actions/checkout@v4

      - name: 📦 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.2 # 指定 pnpm 版本，可以换成 latest

      - name: 📦 复用 node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('pnpm-lock.yaml') }}

      - name: 🎨 运行 ESLint
        run: pnpm run lint

  build:
    name: ⚙️ 产物构建
    runs-on: ubuntu-latest
    needs: lint # 代码规范检测通过后执行
    steps:
      - name: 🛎️ 拉取代码
        uses: actions/checkout@v4

      - name: 📦 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.2 # 指定 pnpm 版本，可以换成 latest

      - name: 📦 复用 node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('pnpm-lock.yaml') }}

      - name: ⚙️ 构建项目
        run: pnpm run build

      - name: 📦 存储构建产物
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist
          retention-days: 1

  compatibility-test:
    name: 🖥️ 产物兼容性测试
    runs-on: ubuntu-latest
    needs: build # 依赖构建产物，但与安全性测试并行
    steps:
      - name: 🛎️ 下载构建产物
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist

      - name: 📦 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.2 # 指定 pnpm 版本，可以换成 latest

      - name: 🧪 运行 Jest 兼容性测试
        run: pnpm run test

      - name: 🌎 运行 Browserslist 兼容性检查
        run: npx browserslist "> 0.5%, last 2 versions, not dead"

  security-test:
    name: 🔒 产物安全性测试
    runs-on: ubuntu-latest
    needs: build # 依赖构建产物，但与兼容性测试并行
    steps:
      - name: 🛎️ 下载构建产物
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist

      - name: 📦 安装 pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.2 # 指定 pnpm 版本，可以换成 latest

      - name: 🔒 运行 NPM Audit 安全扫描
        run: pnpm audit --production
